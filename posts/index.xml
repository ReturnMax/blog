<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 晨钟暮鼓</title>
    <link>https://guorou.github.io/posts/</link>
    <description>Recent content in Posts on 晨钟暮鼓</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Wed, 19 Feb 2020 10:42:56 +0800</lastBuildDate>
    
	<atom:link href="https://guorou.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Markdown Syntax</title>
      <link>https://guorou.github.io/2020/02/0000-markdown-syntax/</link>
      <pubDate>Wed, 19 Feb 2020 10:42:56 +0800</pubDate>
      
      <guid>https://guorou.github.io/2020/02/0000-markdown-syntax/</guid>
      <description>&lt;p&gt;本文主要收集了一些关于Markdown语法的魔法知识 😂
&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&#34;空格&#34;&gt;空格&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;&amp;amp;ensp;&lt;/code&gt;半角空格以及&lt;code&gt;&amp;amp;emsp;&lt;/code&gt;全角空格&lt;/p&gt;
&lt;h2 id=&#34;表格内换行&#34;&gt;表格内换行&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Header 1&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Header 2&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;item&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1. one&lt;br /&gt;2. two&lt;br /&gt;3. three&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;页面内跳转&#34;&gt;页面内跳转&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;#%e6%b7%bb%e5%8a%a0%e6%b3%a8%e9%87%8a&#34;&gt;跳转到可爱&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;任务列表&#34;&gt;任务列表&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt;  唱跳&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt;  Rap&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;添加emoji&#34;&gt;添加Emoji&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.webfx.com/tools/emoji-cheat-sheet/&#34; target=&#34;_blank&#34;&gt;👻&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;添加注释&#34;&gt;添加注释&lt;/h2&gt;
&lt;ruby&gt;
&lt;rb&gt;刘畅&lt;/rb&gt;&lt;rt&gt;so cute&lt;/rt&gt;
&lt;/ruby&gt;
&lt;h2 id=&#34;键盘按键&#34;&gt;键盘按键&lt;/h2&gt;
&lt;kbd&gt;
	&lt;kbd&gt;Ctrl&lt;/kbd&gt;
	+
	&lt;kbd&gt;D&lt;/kbd&gt;
&lt;/kbd&gt;
&lt;h2 id=&#34;继续补充中&#34;&gt;继续补充中&amp;hellip;&lt;/h2&gt;</description>
    </item>
    
    <item>
      <title>Linux文件与用户管理</title>
      <link>https://guorou.github.io/2020/02/0005-linux-user-management/</link>
      <pubDate>Sun, 16 Feb 2020 23:12:35 +0800</pubDate>
      
      <guid>https://guorou.github.io/2020/02/0005-linux-user-management/</guid>
      <description>&lt;p&gt;Linux系统是一个多用户多任务的分时操作系统，每一个需要使用系统资源的用户都需要先由系统管理员创建一个账号，然后以该账号的身份和口令登入系统。&lt;/p&gt;
&lt;p&gt;用户的账号既有助于系统管理员控制用户对系统资源的访问权限，也有助于帮助用户组织文件，并为用户提供安全性、隐私性的保护。&lt;/p&gt;
&lt;h2 id=&#34;文件基本属性&#34;&gt;文件基本属性&lt;/h2&gt;
&lt;p&gt;在学习Linux用户管理之前，我们先来了解关于文件的一些基本概念。&lt;br&gt;
在Linux系统中有一个基本思想，即“一切皆文件”。控制文件的访问权限非常重要，Linux中针对每一个文件都有属主(User/Owner)、属组(Group)和其他组(Other)的概念，藉此可以管理不同用户访问同一文件的权限。&lt;br&gt;
&lt;br /&gt;
在Linux系统中，我们可以使用&lt;code&gt;ls -l&lt;/code&gt;命令来显示一个文件的属性及其所属的用户和组，如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;root@guoc:/# ls -l
total &lt;span class=&#34;m&#34;&gt;7&lt;/span&gt;
...
drwxrw-r-- &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; root root &lt;span class=&#34;m&#34;&gt;4096&lt;/span&gt; Otc &lt;span class=&#34;m&#34;&gt;18&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2020&lt;/span&gt; bin  
----------   ---- ----                  ---
 类型及权限   属主  属组                 文件
...
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;属性&#34;&gt;属性&lt;/h3&gt;
&lt;p&gt;首字段&lt;code&gt;drwxrw-r--&lt;/code&gt;描述了文件的类型及不同用户的权限(Permission)。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;文件类型&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;属主权限&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;属组权限&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;其他用户权限&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;d&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;r w x&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;r w -&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;r - -&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1 2 3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;4 5 6&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;7 8 9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;目录文件&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;读写执行&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;读写&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;读&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;其中，首字符表示文件类型：&lt;br&gt;
&lt;code&gt;d&lt;/code&gt;为目录，&lt;code&gt;-&lt;/code&gt;为文件，&lt;code&gt;l&lt;/code&gt;为链接文档，&lt;code&gt;b&lt;/code&gt;为可供存储的接口设备，&lt;code&gt;c&lt;/code&gt;为串行端口设备。&lt;/p&gt;
&lt;p&gt;接下来的字符中，&lt;code&gt;rwx&lt;/code&gt;三个一组，分别表示&lt;code&gt;read&lt;/code&gt;、&lt;code&gt;write&lt;/code&gt;和&lt;code&gt;execute&lt;/code&gt;权限，&lt;code&gt;-&lt;/code&gt;表示没有对应的权限。&lt;/p&gt;
&lt;p&gt;总体来看，第0位确定文件类型，第1-3位确定属主拥有该文件的权限，
第4-6位确定属组拥有该文件的权限，第7-9位确定其他用户拥有该文件的权限。&lt;/p&gt;
&lt;h3 id=&#34;属主userowner&#34;&gt;属主(User/Owner)&lt;/h3&gt;
&lt;p&gt;属主是文件的所有者。默认情况下，属主为该文件的创建者，谁创建了这个文件，谁就自然的成为了该文件的所有者。&lt;/p&gt;
&lt;h3 id=&#34;属组group&#34;&gt;属组(Group)&lt;/h3&gt;
&lt;p&gt;在Linux系统中，用户是按组分类的，一个用户属于一个或多个组，属于同一个组的用户对同一文件拥有相同的访问权限。&lt;br&gt;
当一个用户创建了一个文件后，默认该用户所在的组就是这个文件的属组。通过设定文件的属组，我们可以集中管理属组内所有用户对这个文件的访问权限。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;默认情况下，文件的属主和属组分别为该文件的创建者及其所在的用户组，但我们也可以更改文件的属主和属组。因此，一些教程中把文件的属组解释为文件属主所在的组，或者把属组用户解释为与属主同组的用户，这种理解并不正确。&lt;/li&gt;
&lt;li&gt;上面的例子中，虽然属主和属组都为root，但是属主字段为&lt;strong&gt;用户&lt;/strong&gt;&lt;code&gt;uid&lt;/code&gt;，属组字段为&lt;strong&gt;用户组&lt;/strong&gt;&lt;code&gt;gid&lt;/code&gt;，前者代表单个用户账号，后者代表账号的集合。我们在创建新用户时，会默认创建一个同名的用户组，但是两者之间并不等价。&lt;/li&gt;
&lt;li&gt;对每一个文件来说，除属主以外的用户再划分为属组用户和其他用户，三者之间的权限彼此独立。比如：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;d---rw-r-- &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; usr usr &lt;span class=&#34;m&#34;&gt;4096&lt;/span&gt; Otc &lt;span class=&#34;m&#34;&gt;18&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2020&lt;/span&gt; bin
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;假设属主usr的gid为usr，此时属主没有读写执行bin文件的权限，但是与属主同组的其他用户拥有读写bin文件的权限。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;其他组other&#34;&gt;其他组(Other)&lt;/h3&gt;
&lt;p&gt;除去文件属主和属组用户以外的用户为其他组用户。&lt;/p&gt;
&lt;h2 id=&#34;文件属性管理&#34;&gt;文件属性管理&lt;/h2&gt;
&lt;h3 id=&#34;更改文件属主&#34;&gt;更改文件属主&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Root用户&lt;/strong&gt;可以使用&lt;code&gt;chown&lt;/code&gt;命令更改文件的属主，也可以同时更改文件的属组。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;chown &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;-R&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; User&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;:Group&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;File&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;Directory...&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;code&gt;[  ]&lt;/code&gt;内为可选参数。&lt;br&gt;
-R 为递归更改，当更改目录文件时，加上该参数可以递归更改目录及目录下所有文件的属主。&lt;/p&gt;
&lt;h3 id=&#34;更改文件属组&#34;&gt;更改文件属组&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Root用户&lt;/strong&gt;和&lt;strong&gt;文件属主&lt;/strong&gt;可以使用&lt;code&gt;chgrp&lt;/code&gt;命令更改文件属组，前者更改没有限制，后者只可将属组改为自己是其成员的组。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;chgrp &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;-R&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; User &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;File&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;Directory...&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;-R 为可选参数。当更改目录文件时，加上该参数可以递归更改目录及目录下所有文件的属组。&lt;/p&gt;
&lt;h3 id=&#34;更改文件权限&#34;&gt;更改文件权限&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Root用户&lt;/strong&gt;和&lt;strong&gt;文件属主&lt;/strong&gt;可以使用&lt;code&gt;chmod&lt;/code&gt;命令更改文件权限。&lt;br&gt;
更改文件权限有两种方式，分别为数字模式(Numeric Mode)和符号模式(Symbolic Mode)。&lt;/p&gt;
&lt;h4 id=&#34;数字模式&#34;&gt;数字模式&lt;/h4&gt;
&lt;p&gt;数字模式中&lt;code&gt;r``w``x&lt;/code&gt;权限分别用分数表示：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;r&lt;/code&gt;：4&lt;/li&gt;
&lt;li&gt;&lt;code&gt;w&lt;/code&gt;：2&lt;/li&gt;
&lt;li&gt;&lt;code&gt;x&lt;/code&gt;：1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;三种权限的分数累加之和代表User、Group和Other用户的权限。举个例子，&lt;code&gt;[-rwxrw----]&lt;/code&gt;分数计算如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;User = rwx = 4 + 2 + 1 = 7&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Group = rw- = 4 + 2 + 0 = 6&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Other = --- = 0 + 0 + 0 = 0&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因此，该文件的权限数字可以用&lt;code&gt;760&lt;/code&gt;表示。&lt;br&gt;
更改权限的时我们输入如下命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;chmod &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;-R&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; xyz &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;File&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;Directory...&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;其中xyz就是按照上述方法计算出的用户权限。&lt;/p&gt;
&lt;h4 id=&#34;符号模式&#34;&gt;符号模式&lt;/h4&gt;
&lt;p&gt;符号模式中使用&lt;code&gt;u&lt;/code&gt;，&lt;code&gt;g&lt;/code&gt;，&lt;code&gt;o&lt;/code&gt;分别表示&lt;code&gt;User&lt;/code&gt;，&lt;code&gt;Group&lt;/code&gt;，&lt;code&gt;Other&lt;/code&gt;，用&lt;code&gt;a&lt;/code&gt;来表示&lt;code&gt;All&lt;/code&gt;，即全部的身份。此外，使用&lt;code&gt;+&lt;/code&gt;，&lt;code&gt;-&lt;/code&gt;，&lt;code&gt;=&lt;/code&gt;分别表示添加、除去和设定权限。&lt;/p&gt;
&lt;p&gt;举个例子，我们设定&lt;code&gt;test&lt;/code&gt;文件的权限为&lt;code&gt;-rwxr-xr--&lt;/code&gt;，可以使用以下命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;chmod &lt;span class=&#34;nv&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;rwx,g&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;rx,o&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;r &lt;span class=&#34;nb&#34;&gt;test&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;现在我们使用以下命令，除去&lt;code&gt;test&lt;/code&gt;文件所有用户的执行权限：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;chmod a-x &lt;span class=&#34;nb&#34;&gt;test&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;用户管理&#34;&gt;用户管理&lt;/h2&gt;
&lt;p&gt;Linux是一个多用户的操作系统，支持多个用户同时登录。用户角色可分为三类，分别为root用户、伪用户和普通用户。&lt;br&gt;
&lt;br /&gt;
Root用户系统唯一，具有系统的最高权限，可以操作任何的文件和命令。&lt;br&gt;
伪用户是系统运行必不可少的用户，比如bin、daemon、adm、ftp、mail等用户。这些用户通常都是系统自身拥有的，不具备登录系统的能力。&lt;br&gt;
普通用户和root用户一样，都是真实用户，可以登录系统。但是普通用户的权限有限，通常都是由系统管理员自行添加。&lt;br&gt;
&lt;br /&gt;
用户账号的管理主要涉及到用户账号的添加、修改和删除，我们来分别介绍这几部分的内容。&lt;/p&gt;
&lt;h3 id=&#34;添加新用户账号&#34;&gt;添加新用户账号&lt;/h3&gt;
&lt;p&gt;添加用户账号就是在系统中创建一个新账号，然后为新账号分配用户号、用户组、主目录和登录Shell等资源。刚添加的账号是被锁定的，无法使用。&lt;br&gt;
通过使用&lt;code&gt;useradd&lt;/code&gt;命令添加新的用户账号，语法如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;useradd &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;option&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; username
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;选项说明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt; comment 指定一段注释性描述&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-d&lt;/code&gt; 指定用户主目录，如果此目录不存在，添加-m选项可以创建主目录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-g&lt;/code&gt; 指定用户所属的用户组 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-G&lt;/code&gt; 指定用户所属的附加组，有多个附加组则用逗号隔开&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s&lt;/code&gt; 指定用户的登录Shell&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u&lt;/code&gt; 指定用户的用户号&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;举个例子：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;useradd -d /home/gavin -m -s /bin/bash -g group -G root,adm gavin
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;该命令添加了一个名为&lt;code&gt;gavin&lt;/code&gt;的新用户，&lt;code&gt;-d&lt;/code&gt;和&lt;code&gt;-m&lt;/code&gt;选项为该用户创建了主目录&lt;code&gt;/home/gavin&lt;/code&gt;，登录shell为&lt;code&gt;bash&lt;/code&gt;，他属于&lt;code&gt;group&lt;/code&gt;用户组，同时也属于&lt;code&gt;root&lt;/code&gt;和&lt;code&gt;adm&lt;/code&gt;用户组，其中&lt;code&gt;group&lt;/code&gt;是他的主用户组。&lt;br&gt;
&lt;br /&gt;
添加新用户账号就是系统在/etc/passwd文件中增加一条新纪录，同时更新其他系统文件，如/etc/group和/etc/shadow等，详细介绍见第五节&lt;a href=&#34;#%e7%94%a8%e6%88%b7%e5%92%8c%e7%94%a8%e6%88%b7%e7%bb%84%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6&#34;&gt;「用户和用户组配置文件」&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;指定或修改用户密码&#34;&gt;指定或修改用户密码&lt;/h3&gt;
&lt;p&gt;刚创建的用户没有密码，被系统锁定无法使用，需要为其指定密码后才可以使用，即使是指定空的密码。&lt;br&gt;
使用&lt;code&gt;passwd&lt;/code&gt;命令指定或修改用户密码，语法如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;passwd &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;option&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; username
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;选项说明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt; 锁定密码，禁用账号&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u&lt;/code&gt; 密码解锁&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-d&lt;/code&gt; 使账号没有密码&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f&lt;/code&gt; 强迫用户下次登录时修改密码&lt;/li&gt;
&lt;li&gt;如果username为空，则默认修改当前用户的密码&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;修改用户&#34;&gt;修改用户&lt;/h3&gt;
&lt;p&gt;修改用户账号就是根据实际业务需求更改用户的相关书信，如用户组、登录Shell等。&lt;br&gt;
使用&lt;code&gt;usermod&lt;/code&gt;命令修改用户属性，语法如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;usermod &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;option&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; username
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;选项说明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-l newname&lt;/code&gt; 修改用户名&lt;/li&gt;
&lt;li&gt;其它可参考&lt;code&gt;useradd&lt;/code&gt;命令，如&lt;code&gt;-d&lt;/code&gt;，&lt;code&gt;-g&lt;/code&gt;，&lt;code&gt;-G&lt;/code&gt;，&lt;code&gt;-s&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;删除用户&#34;&gt;删除用户&lt;/h3&gt;
&lt;p&gt;我们可以使用&lt;code&gt;userdel&lt;/code&gt;命令执行删除用户的操作，语法如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;userdel &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;option&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; username
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;常用的选项是&lt;code&gt;-r&lt;/code&gt;，它的作用是将该用户的主目录一起删除，不添加的话会保留该用户的主目录。&lt;br&gt;
举个例子：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;userdel -r gavin
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;该命令会删除用户&lt;code&gt;gavin&lt;/code&gt;在系统文件，如/etc/passwd，/etc/shadow，/etc/group中的相应记录，同时删除用户的主目录。&lt;/p&gt;
&lt;h2 id=&#34;用户组管理&#34;&gt;用户组管理&lt;/h2&gt;
&lt;p&gt;用户组是具有相同权限的一组用户，通过用户组我们可以集中管理用户组中所有用户的权限。&lt;br&gt;
默认情况下，Linux系统中创建的用户属于与它同名的用户组，这个用户组在创建用户时同时建立。&lt;br&gt;
用户组的管理主要包括用户组的添加、删除和修改，本质上是对/etc/group文件的更新。&lt;/p&gt;
&lt;h3 id=&#34;增加用户组&#34;&gt;增加用户组&lt;/h3&gt;
&lt;p&gt;使用&lt;code&gt;groupadd&lt;/code&gt;命令增加新的用户组，语法如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;groupadd &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;-g&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; groupname
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;举个例子：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;groupadd -g &lt;span class=&#34;m&#34;&gt;100&lt;/span&gt; gavin
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;我们在系统中添加了一个名为&lt;code&gt;gavin&lt;/code&gt;的新用户组，并指定新组的组标识号gid为100；如果不添加-g参数，那么新组的组标识号是在当前已有的最大组标识号的基础上加1。&lt;/p&gt;
&lt;h3 id=&#34;修改用户组&#34;&gt;修改用户组&lt;/h3&gt;
&lt;p&gt;修改用户组属性使用&lt;code&gt;groupmod&lt;/code&gt;命令，语法如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;groupmod &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;option&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; group
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;选项说明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-g&lt;/code&gt; 为用户指定新的组标识号&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n newgroup&lt;/code&gt; 将用户组名改为新名字&lt;br&gt;
举个例子：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;groupmod -g &lt;span class=&#34;m&#34;&gt;2020&lt;/span&gt; -n kavin gavin
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;该命令将gavin用户组更名为kavin，并将组标识号改为2020。&lt;/p&gt;
&lt;h3 id=&#34;删除用户组&#34;&gt;删除用户组&lt;/h3&gt;
&lt;p&gt;删除用户组使用&lt;code&gt;groupdel&lt;/code&gt;命令，语法如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;groupdel group
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;用户和用户组配置文件&#34;&gt;用户和用户组配置文件&lt;/h2&gt;
&lt;p&gt;在Linux系统中，与用户和用户组相关的信息保存在一些系统文件中，主要包括以下三个文件:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/etc/passwd&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/etc/group&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/etc/shadow&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;而前文所述的针对用户与用户组的管理，本质上是对这些文件中的相应信息进行修改，接下来让我们详细介绍一下这几个文件。&lt;/p&gt;
&lt;h3 id=&#34;passwd文件&#34;&gt;passwd文件&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;/etc/passwd&lt;/code&gt;文件存储了当前系统中所有用户的信息。文件的每一行记录都对应着系统中的一个用户，记录了这个用户的一些基本属性。&lt;/p&gt;
&lt;p&gt;文件的内容类似于下面的例子：&lt;/p&gt;
&lt;pre&gt;
root&amp;#58;x:0:0:root:/root:/bin/bash  
daemon&amp;#58;x:1:1:daemon:/usr/sbin:/usr/sbin/nologin  
bin&amp;#58;x:2:2:bin:/bin:/usr/sbin/nologin  
sys&amp;#58;x:3:3:sys:/dev:/usr/sbin/nologin  
···
&lt;/pre&gt;  
&lt;p&gt;文件中每个用户的信息格式是固定的，每行记录用（:）分隔为七个字段，每个字段的说明如下：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;user:&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;x:&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;123:&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;456:&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;xxx:&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;/home/user:&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;/bin/bash&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;用户名&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;密码占位符&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;UID&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;GID&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;注释性描述&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;主目录&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;登录Shell&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;shadow文件&#34;&gt;shadow文件&lt;/h3&gt;
&lt;p&gt;由于/etc/passwd文件所有用户都可读，用户的密码太简单或规律比较明显会被轻易破解。因此Linux系统中把加密后的密码分离出来，单独保存放在&lt;code&gt;/etc/shadow&lt;/code&gt;文件中。只超级用户才拥有该文件的读取权限，保证了用户密码的安全性。&lt;/p&gt;
&lt;p&gt;shadow文件中的记录与passwd中的用户记录一一对应，记录格式也类似，由（:）分割成的多个字段组成。&lt;/p&gt;
&lt;p&gt;举个例子：&lt;/p&gt;
&lt;pre&gt;
root:Dnakfw28zf38w:8764:0:168:7:::
daemon:*::0:0::::
bin:*::0:0::::
sys:*::0:0::::  
&lt;/pre&gt;
&lt;p&gt;字段说明如下：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;登录名:加密密码:最后一次修改时间:最小时间间隔:最大时间间隔:警告时间:不活动时间:失效时间:标志&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;group文件&#34;&gt;group文件&lt;/h3&gt;
&lt;p&gt;用户和用户组之间存在一对一、一对多和多对一的关系。&lt;br&gt;
在&lt;code&gt;passwd&lt;/code&gt;文件中记录的是用户所属的主组，即登录时所属的默认组。除主组以外，用户也可以属于其他多个组，这些组称为用户的附加组。&lt;br&gt;
用户组的信息保存在&lt;code&gt;/etc/group&lt;/code&gt;文件中，文件内容的格式与&lt;code&gt;passwd&lt;/code&gt;相似，也是由（:）隔开的字段组成，举个例子：&lt;/p&gt;
&lt;pre&gt;
root&amp;#58;x:0:root
bin&amp;#58;x:2:root,bin
sys&amp;#58;x:3:root,uucp
···
gavin&amp;#58;x:5:gavin,kavin 
&lt;/pre&gt;  
&lt;p&gt;各个字段的说明如下：&lt;br&gt;
&lt;code&gt;组名:密码:组标识号(GID):组内用户列表&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;此外，用户组也有一个对应的&lt;code&gt;/etc/gshadow&lt;/code&gt;文件保存用户组密码，在此不作具体介绍。&lt;/p&gt;
&lt;h2 id=&#34;常用命令总结&#34;&gt;常用命令总结&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;命令&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;chmod [option] file&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;修改文件权限&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;chown user file&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;修改文件属主&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;chgrp group file&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;修改文件属组&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;whoami&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;查询当前登录用户名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;id user&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;查询指定用户信息，包括&lt;code&gt;uid&lt;/code&gt;、&lt;code&gt;gid&lt;/code&gt;和&lt;code&gt;groups&lt;/code&gt;&lt;br /&gt;如果不指定用户名则显示当前登录用户信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;groups user&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;查询指定用户所属的组，显示的第一个组是当前用户的主要组&lt;br /&gt;如果不指定用户名则显示当前登录用户所属的组&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;newgrp group&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;如果用户同时属于多个用户组，该命令用于当前登录用户在不同组间切换，&lt;br/&gt;以便具有其他用户组的权限，切换的组必须是当前用户的主组或附加组&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;su user&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;切换登录用户，不指定用户名则切换为root用户&lt;br /&gt;切换后$表示普通用户，#表示超级用户&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;useradd [option] user&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;添加新用户&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;passwd [option] user&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;指定或修改用户密码，添加新用户后需指定密码后才可使用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;usermod [option] user&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;修改用户信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;userdel [-r] user&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;删除指定用户，-r删除用户主目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;groupadd group&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;添加新用户组&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;groupdel group&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;删除指定用户组&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;groupmod group&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;修改指定用户组&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;细节补充&#34;&gt;细节补充&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;添加新用户后，切换到该用户只显示一个&lt;code&gt;$&lt;/code&gt;符号，而不是常见的&lt;code&gt;user@***&lt;/code&gt;的格式；而且一些命令，如&lt;code&gt;ll&lt;/code&gt;也无法使用，请问为什么？&lt;/p&gt;
&lt;p&gt;解决办法：将用户登录Shell设置为/bin/bash即可。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;从权限高的用户切换到权限低的用户不需要输入密码，反之需要。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;参考资料&#34;&gt;参考资料&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://www.runoob.com/linux/linux-user-manage.html&#34; target=&#34;_blank&#34;&gt;菜鸟教程&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>SSH简介</title>
      <link>https://guorou.github.io/2020/02/0004-ssh-introduction/</link>
      <pubDate>Wed, 12 Feb 2020 21:24:11 +0800</pubDate>
      
      <guid>https://guorou.github.io/2020/02/0004-ssh-introduction/</guid>
      <description>&lt;p&gt;虽然一直在使用SSH连接服务器，但是对于SSH连接的原理却没有深究，只是大体了解是使用了非对称加密技术对传输信息进行了加密。搜资料的时候顺手翻到了一篇博文，介绍的还比较详细，特转载保存。本文转自&lt;a href=&#34;https://fancyseeker.github.io/2013/12/30/ssh_overview/&#34; target=&#34;_blank&#34;&gt;链接&lt;/a&gt;，作者是FancySeeker。&lt;br&gt;
本文主要介绍了SSH的连接认证原理以及SSH的配置和使用。&lt;/p&gt;
&lt;h2 id=&#34;ssh简要介绍&#34;&gt;SSH简要介绍&lt;/h2&gt;
&lt;p&gt;SSH的英文全称为Secure Shell，是IETF（Internet Engineering Task Force）的Network Working Group所制定的一族协议，其目的是要在非安全网络上提供安全的远程登录和其他安全网络服务。用于在主机之间建立起安全连接, 并加密传输内容, 以达到安全的远程访问, 操作以及数据传输的目的。&lt;/p&gt;
&lt;p&gt;SSH主要有两个特点: 1. 安全性 2. 传输速度快&lt;/p&gt;
&lt;p&gt;为什么要强调SSH的安全特性, 因为传统的网络服务程序，如 FTP、POP 和 Telnet 其本质上都是不安全的；因为它们在网络上用明文传送数据、用户帐号和用户口令，很容易受到中间人（man-in-the-middle）攻击方式的攻击。就是存在另一个人或者一台机器冒充真正的服务器接收用户传给服务器的数据，然后再冒充用户把数据传给真正的服务器。 而 SSH 是目前较可靠，专为远程登录会话和其他网络服务提供安全性的协议。利用 SSH 协议可以有效防止远程管理过程中的信息泄露问题。透过 SSH 可以对所有传输的数据进行加密，也能够防止 DNS 欺骗和 IP 欺骗。&lt;/p&gt;
&lt;p&gt;SSH的传输速度快是因为SSH传输的数据都是经过压缩的, 自然传输速度快。&lt;/p&gt;
&lt;h2 id=&#34;ssh认证原理&#34;&gt;SSH认证原理&lt;/h2&gt;
&lt;p&gt;在介绍SSH具体的认证原理之前, 先简单的介绍下关于公钥和密钥加密的概念。所谓的公钥加密（public-key cryptography），或非对称密钥加密（asymmetric key cryptography） 是一类广泛使用的加密算法。这类算法使用一对（pair）密钥即公钥（public key）和私钥（private key）。 其中公钥可以随便分发，只用于加密（encryption），私钥则只由一人持有，只用于解密。通过公钥加密过的密文使用密钥可以轻松解密, 但根据公钥来猜测私钥却十分困难。&lt;/p&gt;
&lt;p&gt;因此, 我们可以很容易的发现这么一个事实, 一个消息在用公钥加密后, 哪怕在传输中被人截获, 如果没有私钥, 是无法解密获得其内容的, 只有拥有私钥的人才能成功解密消息。所以私钥应该由消息的接收方紧紧攥在手里, 不应让他人得知。&lt;/p&gt;
&lt;p&gt;公钥加密的关键点在于，一方面，公钥加密是可逆的，但是不能用公钥推断出私钥。显然数学上，已知一个公钥是能够算出对应私钥的，但是只要设计足够好的加密算法（以及使用足够复杂的密钥对），使得不能在可以接受的时间内破译即可。&lt;/p&gt;
&lt;p&gt;RSA是一种常见的公钥加密算法。RSA的工作原理依赖于如下事实：破译RSA私钥需要对某些极大的整数进行因数分解，而目前尚未找到快速的对极大整数作因数分解的算法。换言之，如果有人找到了这样的算法，那么全世界的 RSA 加密都会失效。&lt;/p&gt;
&lt;p&gt;RSA是由Ron Rivest，Adi Shamir, Leonard Adleman三人在1978年首次提出的。三人并因此项工作荣获了2002年Turing Award。Rivest还是算法导论的作者之一，书中在31章对RSA系统的原理进行了简要说明，系统实现中利用到了数论中的Euler-Fermat theorem。&lt;/p&gt;
&lt;p&gt;一个基于RSA的公钥大概如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAvSkEZ0fKXRqQ/DkjCfsAETsQgV8OR/RVQmwBk/J5IWoknf8Dr
y5kOs+1bnx9zaf8oIcVuXf0jRxTccLBOXiReFJE4aD2rWO33sqA0M4qP1ESYhsU4yokRA0IMDJ62JUv2cWVJg
GpeQriol2t7mH8E6aB8OiJ+NgRbh6+/0LbtQs40VA2+W5PtaBwT4sjv9LOHIdzQcsEeCM8MIHqmXHst7/JuVI
i7wLCxB7Ur8qtwZ2/Ii8Ckjfo6mikWmSh6mRMq9qn0FkMkPCcpm8o4f1zJWOuf+RnjPpopFTqIa8JssMHJMuQ
cCm3EHDkBHjLk/SkidWOzqOtSvUeGKieWiijuw== username@localhost.localdomain
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;与之配对的私钥形如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEAvSkEZ0fKXRqQ/DkjCfsAETsQgV8OR/RVQmwBk/J5IWoknf8D
ry5kOs+1bnx9zaf8oIcVuXf0jRxTccLBOXiReFJE4aD2rWO33sqA0M4qP1ESYhsU
4yokRA0IMDJ62JUv2cWVJgGpeQriol2t7mH8E6aB8OiJ+NgRbh6+/0LbtQs40VA2
+W5PtaBwT4sjv9LOHIdzQcsEeCM8MIHqmXHst7/JuVIi7wLCxB7Ur8qtwZ2/Ii8C
kjfo6mikWmSh6mRMq9qn0FkMkPCcpm8o4f1zJWOuf+RnjPpopFTqIa8JssMHJMuQ
cCm3EHDkBHjLk/SkidWOzqOtSvUeGKieWiijuwIBIwKCAQEAjITesx9jIJdkY5go
qFQOrbbZD6Wy1l27ra9RoRqF3k7ZX2z7bDEXQaGcuHm8iiUEzwVDVpOfuUg9/LyP
icdHffP4p5wk9dUMPxoWjHvk3pP/BwzNsBCtOd3LkYSVxXYji9SaroTkS0nqL3jK
WVAaV72FGVxJPINAJer0SJgQ7OJ7f0kZJYoPwG0VpMTLOsmulH7/M5e9i+kwDLmH
+TMvJ3y8gXjc/Sj5UqN/JQIY+h07UxYGvoju/isqFHh8OmahsjJ3Nb3QsUEkC/Kj
cKG2K+mUzTe/4/XQuqMadrjX82QF2b2gL+cdvUAwLn55boXmrtUzxEPo4xxiDNzY
AbYxSwKBgQDxIkaa+EPSJXYej/5YzJLJLVsnb9ygqe/0fM0x022J6Z+0Yq9AIwJ7
N7dvMgNSROLoJ17Oij/N7aoiAZy1KHg1vOoqx6T6BClay8I1+dOsbY6Fi0QbkZeI
Rr6CDueq5PBR8j/oghNhQeFfJUEICBFU6Z7+uFwxuAtQqqdFHyDhSwKBgQDI0nX6
Jz9oW+Y+dXAvhpL8Yln0R45ufiqatkTQgGbeZ70XlKeR7VzQiXecy/XDteJCMlnv
4BhjHL967nSAmrCza13I3eXIYxbzypeNC57bVVXM9BBTg5f4nWwTN+I8Gd/BA5Y8
mekQPBuSyAOp7ULAecjKZrD9Jhw1vybT/aYxUQKBgQDcdxv7ZqRoXMPEK+E7PrIX
BOWgZkYPPEkaC7RKz+8fAXwSo15mhmirK6BlqhGqTZxB+BwqjQcirWhZmxLuxeo/
wqo1vdiqEm7z7X5dPC8+kA1G5bqc3OJQtbV+OYNaaupZjQc6+pVgPDvEtFi24s4E
fdMyB6S/vjY7H67gHHXVSwKBgQC3m9mUQSQHpHq8wyS9vN4olG+AQWxHw88uXYC+
oUgbzI+gh+mp/ZawCKff0GurnvrALgkV1DON0SQYn4B1lL7P7SKLw5BCLrXmNZHg
Cp/eeegL19RpnOK3a1t/SQlbhV7cWw0ENPJX/HD7OocBwvszoouxvPmW/kWte5E2
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;SSH 连接是&lt;code&gt;C/S&lt;/code&gt;模型，客户端发出连接申请，服务器对客户端进行验证，再考虑是否接受连接申请。&lt;/p&gt;
&lt;h2 id=&#34;ssh认证过程&#34;&gt;SSH认证过程&lt;/h2&gt;
&lt;p&gt;SSH提供了两种认证的方式, 分别为:&lt;/p&gt;
&lt;h3 id=&#34;password认证&#34;&gt;Password认证&lt;/h3&gt;
&lt;p&gt;即账号口令验证，SSH的实现方式是，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;客户端向 ssh 服务器发出请求，服务器将自己的公钥返回给客户端；&lt;/li&gt;
&lt;li&gt;客户端用服务器的公钥加密自己的登录密码，再将信息发送给服务器；&lt;/li&gt;
&lt;li&gt;服务器接收到客户端传送的密码，用自己的私钥解码，如果结果正确，则同意登录，建立起连接。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这种方式还是存在漏洞，中间人可以假扮成服务器，骗取客户端的密码。而且在每次登陆的时候都需要输入密码，所以一般不采用该验证方式。&lt;/p&gt;
&lt;h3 id=&#34;public-key认证&#34;&gt;Public Key认证&lt;/h3&gt;
&lt;p&gt;Public Key认证利用公钥私钥对进行认证，在请求连接时不需要输入密码，并且由于整个请求连接和通信过程全程加密，因此安全性高。&lt;br&gt;
SSH协议第二版中有RSA和DSA两种算法认证，其中RSA加密验证比较常用。&lt;br&gt;
RSA加密验证方式，充分利用了非对称加密体系的优势，不需要在网络传输密码，完全杜绝了中间人攻击的可能。&lt;br&gt;
认证的具体步骤如下:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;准备工作&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;客户端先使用 ssh-keygen 命令，生成公钥和私钥。按照默认配置，私钥会被保存在&lt;code&gt;~/.ssh/id_rsa&lt;/code&gt;中，公钥则在&lt;code&gt;~/.ssh/id_rsa.pub&lt;/code&gt;中。&lt;/li&gt;
&lt;li&gt;客户端通过安全的方式（一般通过scp/Secure Copy Protocol）方式或者U盘拷贝的方式)将公钥发送给服务器。在服务器端, 将客户端发的公钥写入到&lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt;文件末尾。（其实公钥和私钥不是必须在客户端生成, 在服务器端生成也是可以的, 在哪生成的对公钥和私钥并没有任何影响, 重要的是二者是配对的, 而准备阶段其实是要保证这么一个事实, 即服务器端握有公钥, 并在对应账户的家目录下的&lt;code&gt;.ssh/authorized_keys&lt;/code&gt;文件中保存以便验证程序访问。请求端握有私钥。 至于为什么要将公钥和私钥这么分配, 接下来将会解释）&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;建立连接&lt;/strong&gt;&lt;br&gt;
在建立连接的时候，涉及到2对密钥，其中一对为准备阶段产生并分配好的密钥对，另一对为服务器在接收到一个连接请求时生成的密钥对。为了讲述方便，我们将这两组密钥对表示如下&lt;br&gt;
|Symbol|Description|&lt;br&gt;
|:-:|:-:|&lt;br&gt;
|PubC|客户端密钥对应的公钥|&lt;br&gt;
|PrvC|客户端握有的私钥|&lt;br&gt;
|PubS|服务器端产生的公钥|&lt;br&gt;
|PrvS|服务器端产生的私钥|&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;认证&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;服务器生成随机数（称之为challenge）&lt;code&gt;x&lt;/code&gt;，并用&lt;code&gt;PubC&lt;/code&gt;加密后生成结果&lt;code&gt;s(x)&lt;/code&gt;，发送给客户端；&lt;/li&gt;
&lt;li&gt;客户端使用&lt;code&gt;PrvC&lt;/code&gt;解密&lt;code&gt;s(x)&lt;/code&gt;得到&lt;code&gt;x&lt;/code&gt;，再将&lt;code&gt;x&lt;/code&gt;用&lt;code&gt;PubS&lt;/code&gt;加密发送回服务器端；&lt;/li&gt;
&lt;li&gt;服务器端使用&lt;code&gt;PrvS&lt;/code&gt;解密得到&lt;code&gt;x&lt;/code&gt;，进行核对, 如果正确则链接正式成立。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;通信加密&lt;/strong&gt;&lt;br&gt;
在请求连接前，服务器端和客户端拥有的密钥为&lt;br&gt;
|Server|Client|&lt;br&gt;
|:-:|:-:|&lt;br&gt;
|PubC|PrvC|&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;客户端发出申请。服务器会产生一组&lt;code&gt;session&lt;/code&gt;密钥对，即&lt;code&gt;PubS&lt;/code&gt;和&lt;code&gt;PrvS&lt;/code&gt;。&lt;br&gt;
此时服务器端和客户端拥有的密钥如下&lt;br&gt;
|Server|Client|&lt;br&gt;
|:-:|:-:|&lt;br&gt;
|PubC|PrvC|&lt;br&gt;
|PubS||&lt;br&gt;
|PrvS||&lt;/li&gt;
&lt;li&gt;服务器端利用客户端的公钥&lt;code&gt;PubC&lt;/code&gt;对&lt;code&gt;session&lt;/code&gt;公钥&lt;code&gt;PubS&lt;/code&gt;进行加密后发送给客户端；&lt;/li&gt;
&lt;li&gt;客户端用自己的密钥&lt;code&gt;PrvC&lt;/code&gt;解密信息，得到&lt;code&gt;session&lt;/code&gt;公钥&lt;code&gt;PubS&lt;/code&gt;，此时服务器端和客户端拥有的密钥如下&lt;br&gt;
|Server|Client|&lt;br&gt;
|:-:|:-:|&lt;br&gt;
|PubC|PubS|&lt;br&gt;
|PubS|PrvC|&lt;br&gt;
|PrvS||&lt;/li&gt;
&lt;li&gt;之后的数据交互，都通过对方方公钥加密，对方收到信息后，用其私钥解密，实现安全加密过程。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>Ali云服务器配置</title>
      <link>https://guorou.github.io/2020/02/0003-ali-cloud-server/</link>
      <pubDate>Wed, 12 Feb 2020 19:48:57 +0800</pubDate>
      
      <guid>https://guorou.github.io/2020/02/0003-ali-cloud-server/</guid>
      <description>&lt;h2 id=&#34;阿里云ecs服务器配置&#34;&gt;阿里云ECS服务器配置&lt;/h2&gt;
&lt;p&gt;趁着过年期间阿里云的新客活动，忍痛购买了3年的ECS云服务器，顺便可以给自己的域名挂上良民证，奥利给！&lt;/p&gt;
&lt;p&gt;但是由于今年疫情的原因，备案时间会比较长，据说需要20天左右。而且之前一直只是在用Linux Client，于是趁着备案期间先熟悉一下阿里云Linux Server的使用和设置，下面是一些零零散散的~踩坑~学习记录。&lt;/p&gt;
&lt;h3 id=&#34;密码&#34;&gt;密码&lt;/h3&gt;
&lt;p&gt;管理密码是一件非常头疼的事情，每次设置完密码都会陷入沉思，&amp;ldquo;woc&amp;hellip;马什么梅来?&amp;quot;。&lt;br&gt;
ECS实例创建后主要使用的有两个密码，分别是实例密码和远程连接密码。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;实例密码&lt;br&gt;
实例密码是Linux操作系统的密码，就是Root用户密码。奇怪的是创建实例时没有任何初始密码的提示，我是在创建完成后在服务控制台进行的密码重置，需要注意的是重置密码需要重启实例后才会生效。&lt;/li&gt;
&lt;li&gt;远程连接密码&lt;br&gt;
远程连接密码是指阿里云控制台自带的远程连接工具的密码，这个密码最初是系统自动生成的6位数字，用户可以自定义修改这个远程连接密码。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;事实上，如果我们不使用阿里云控制台自带的VNC远程连接工具，那么就用不到远程连接密码。更改远程连接密码无需重启直接生效；实例密码是Linux系统下的root密码，Windows系统下的administrator密码，修改实例密码必须重启实例才可以生效。&lt;/p&gt;
&lt;h2 id=&#34;网络&#34;&gt;网络&lt;/h2&gt;
&lt;p&gt;阿里云面向客户提供的网络类型服务有经典网络和专有网络两种，官方文档给的解释是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;经典网络&lt;br&gt;
ip地址由阿里云统一分配，配置简便，使用方便，适合对操作易用性要求比较高、需要快速使用 ECS 的用户。&lt;/li&gt;
&lt;li&gt;专有网络&lt;br&gt;
是指逻辑隔离的私有网络，您可以自定义网络拓扑和 ip 地址，支持通过专线连接。适合于熟悉网络管理的用户。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们通俗点理解就是，经典网络和专有网络公网使用同一个公网ip。但是从内网ip来看，经典网络是DHIP，也就是系统自动分配局域网ip地址，而专有网络则是手动分配局域网ip地址，方便有多台云服务器的用户自行定义内网ip结构。所以，如果我们只有一台服务器，或者有多台服务器但不需要进行内网互联，那么这两种网络任选一个就可以了。&lt;/p&gt;
&lt;h2 id=&#34;带宽&#34;&gt;带宽&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;入网带宽（上行带宽）&lt;br&gt;
流入云服务器ECS的带宽，例如：
&lt;ul&gt;
&lt;li&gt;云服务器ECS下载外部网络资源&lt;/li&gt;
&lt;li&gt;FTP客户端上传资源到云服务器ECS&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;出网带宽（下行带宽）&lt;br&gt;
流出云服务器ECS的带宽，例如：
&lt;ul&gt;
&lt;li&gt;云服务器ECS对外提供访问&lt;/li&gt;
&lt;li&gt;FTP客户端下载云服务器ECS内部资源&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;安全组&#34;&gt;安全组&lt;/h2&gt;
&lt;p&gt;安全组是ECS实例的虚拟防火墙，用于设置实例的网络访问控制，允许或拒绝公网请求和内网请求。&lt;br&gt;
安全组具备状态检测和数据包过滤功能，可以设置单台或多台云服务器的网络访问控制。&lt;br&gt;
每个实例必须属于至少一个安全组，一个安全组可以包括多个实例。同一安全组内的实例之间默认内网互通，不同安全组的实例之间默认内网不通，可以授权两个安全组之间互访。&lt;br&gt;
在创建实例时，系统会提供一个默认安全组，默认安全组中的默认规则仅设置针对ICMP协议、SSH 22端口、RDP 3389端口、HTTP 80端口和HTTPS 443端口的入方向规则。&lt;br&gt;
我们也可以自行创建一个安全组并添加能满足自己业务需求的安全组规则，自行创建的安全组在未添加任何安全组规则之前，出方向允许所有访问，入方向拒绝所有访问。&lt;/p&gt;
&lt;h3 id=&#34;添加安全组规则&#34;&gt;添加安全组规则&lt;/h3&gt;
&lt;p&gt;一般场景下我们需要设置的选项主要有两个：端口范围和授权对象，其他可参考默认设置。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;端口范围&lt;br&gt;
端口取值范围从1到65535，设置格式例如1/200或者80/80，其中“-1/-1”不能单独设置，代表不限制端口。&lt;/li&gt;
&lt;li&gt;授权对象&lt;br&gt;
可以填写单个ip地址，例如223.78.253.196/32，填写0.0.0.0/0表示允许/拒绝全网段访问指定端口。&lt;br&gt;
可以填写多个ip地址，彼此之间用逗号隔开。&lt;br&gt;
此外还可以指定ip地址段，如 223.78.253.196/31，这将会授权/拒绝223.78.253.196和223.78.253.197的连接。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;规则优先级&#34;&gt;规则优先级&lt;/h3&gt;
&lt;p&gt;同类型规则间依赖优先级（手动建立1-100，系统建立110）决定最终执行的规则。当ECS实例加入了多个安全组时，多个安全组会从高到低依次匹配规则。优先级取值范围如下所示，数值越小，优先级越高。&lt;/p&gt;
&lt;h3 id=&#34;实践建议&#34;&gt;实践建议&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;仅允许少量请求访问ECS实例时，可以将安全组作为白名单使用。即先设置安全组为拒绝全部访问，然后逐一添加允许通信的访问请求策略。&lt;/li&gt;
&lt;li&gt;选择开放具体的端口，如80/80端口，不要设置为端口范围。&lt;/li&gt;
&lt;li&gt;添加安全组规则时，谨慎授权0.0.0.0/0（全网段）访问源。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;案例&#34;&gt;案例&lt;/h3&gt;
&lt;p&gt;如果您在实例上架设了一个网站，希望您的用户能通过HTTPS服务访问到您的网站，您需要在实例所在安全组中添加以下安全组规则。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;网络类型&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;网卡类型&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;规则方向&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;授权策略&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;协议类型&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;端口范围&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;授权类型&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;授权对象&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;优先级&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;VPC&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;不需要配置&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;入方向&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;允许&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;HTTPS&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;443&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;地址段访问&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;0.0.0.0/0&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;经典网络&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;公网&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;入方向&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;允许&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;HTTPS&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;443&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;地址段访问&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;0.0.0.0/0&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;ssh连接实例&#34;&gt;SSH连接实例&lt;/h2&gt;
&lt;p&gt;Secure Shell（SSH）是一种加密网络协议，通过对传输内容进行加密在不安全的网络上安全地操作网络服务，常用于用户远程登录到计算机系统。&lt;br&gt;
SSH不是本文介绍的重点，详细请看这篇&lt;a href=&#34;daibuchong&#34;&gt;文章&lt;/a&gt;，本文主要介绍阿里云SSH配置。&lt;/p&gt;
&lt;h3 id=&#34;root用户&#34;&gt;Root用户&lt;/h3&gt;
&lt;p&gt;首先，我们需要在安全组中开放入方向的22端口（默认已经开启），确认开启之后我们可以通过用户名密码验证和SSH密钥对验证两种方式远程连接服务器实例。密钥验证相对更加安全，而且阿里云的SSH密钥设置也非常简便，直接在控制台中即可完成。&lt;br&gt;
首先我们在 &lt;code&gt;云服务控制台 &amp;gt; 网络与安全 &amp;gt; 密钥对&lt;/code&gt; 中创建密钥对并绑定实例，该密钥由ECS生成，默认采用RSA 2048位的加密方式。密钥绑定后，公钥会自动保存在实例中，我们把私钥保存到本地，然后便可通过Xshell等工具连接实例了。&lt;/p&gt;
&lt;h3 id=&#34;非root用户&#34;&gt;非Root用户&lt;/h3&gt;
&lt;h3 id=&#34;实践注意事项&#34;&gt;实践注意事项&lt;/h3&gt;
&lt;p&gt;使用SSH密钥需要注意两点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果使用SSH密钥对登录Linux实例，将会禁用密码登录，以提高安全性。&lt;br&gt;
如果在绑定密钥对之后想使用密码方式登录实例，可以通过重置实例密码实现。如果在绑定密钥对之后重置了实例密码，使用密钥对方式和使用密码方式均能登录实例。&lt;/li&gt;
&lt;li&gt;基于数据安全考虑，在实例状态为运行中（Running）时绑定或者解绑密钥对，您需要重启实例使操作生效。&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Hugo简明教程2</title>
      <link>https://guorou.github.io/2020/02/0002-hugo-concise-tutorial2/</link>
      <pubDate>Tue, 04 Feb 2020 17:46:40 +0800</pubDate>
      
      <guid>https://guorou.github.io/2020/02/0002-hugo-concise-tutorial2/</guid>
      <description>&lt;p&gt;在上篇文章中，我们介绍了如何使用预创建的主题快速生成自己的静态网页并利用Github免费托管。&lt;/p&gt;
&lt;p&gt;但是使用预创建的主题怎么能满足我们的需求，作为一个geek我们要的是随心所欲为所欲为！&lt;/p&gt;
&lt;p&gt;接下来的教程就让我们从零开始，学习如何撸出一款高度定制化的Hugo主题吧！&lt;/p&gt;
&lt;h2 id=&#34;content-management&#34;&gt;Content Management&lt;/h2&gt;
&lt;h3 id=&#34;basic-concepts&#34;&gt;Basic Concepts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Content&lt;br&gt;
内容就是我们自己以markdown格式撰写的文章，通常我们把单独的文章放到content目录下，将同一类型的文章放到content的子目录下。&lt;br&gt;
文章可以通过命令行，如&lt;code&gt;hugo new about.md&lt;/code&gt;生成，也可以手动创建后放入content目录下。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Template&lt;br&gt;
模板保存在两个地方，分别为&lt;code&gt;site/layouts&lt;/code&gt;目录中和&lt;code&gt;site/themes/themename/layouts&lt;/code&gt;目录中，其中前者的优先级高于后者，当前者为空时才去寻找后一个目录下的设置。&lt;br&gt;
模板主要分为以下几种，分别为基础模板（），单页模板（），列表模板（），局部模板（），首页模板以及404页面模板。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Static Page&lt;br&gt;
Static Page = Content + Template&lt;br&gt;
页面是通过&lt;code&gt;hugo&lt;/code&gt;命令生成的静态网站中的html页面。Hugo会根据文章的kind属性和固定的规则去找到相应的模板，然后根据模板生成最终的html页面。&lt;br&gt;
最终我们自己创建的文章和Hugo自动创建的文件的路径会转换成对应的网站的url，文章、页面和url的对应关系为：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;└── content
    ├── _index.md          // [home]            &amp;lt;- https://example.com/**
    ├── about.md           // [page]            &amp;lt;- https://example.com/about/
    ├── posts               
    |   ├── _index.md      // [section]         &amp;lt;- https://example.com/posts/**         
    |   ├── firstpost.md   // [page]            &amp;lt;- https://example.com/posts/firstpost/
    |   ├── happy           
    |   |   ├── _index.md  // [section]         &amp;lt;- https://example.com/posts/happy/**
    |   |   └── ness.md    // [page]            &amp;lt;- https://example.com/posts/happy/ness/
    |   └── secondpost.md  // [page]            &amp;lt;- https://example.com/posts/secondpost/
    └── quote   
        ├── _index.md      // [section]         &amp;lt;- https://example.com/quote/**           
        ├── first.md       // [page]            &amp;lt;- https://example.com/quote/first/
        └── second.md      // [page]            &amp;lt;- https://example.com/quote/second/
// hugo默认生成的页面, 没有对应的markdown文章
分类列表页面               // [taxonomyTerm]    &amp;lt;- https://example.com/categories/**
某个分类下的所有文章的列表  // [taxonomy]        &amp;lt;- https://example.com/categories/one-category **
标签列表页面               // [taxonomyTerm]    &amp;lt;- https://example.com/tags/**
某个标签下的所有文章的列表  // [taxonomy]        &amp;lt;- https://example.com/tags/one-tag **
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;&lt;small&gt;注意：_index.md不是必须的, 如果没有找到_index.md，hugo会使用一些默认值。&lt;/small&gt;&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
页面总体分为两种，分别为&lt;code&gt;单页(signle page)&lt;/code&gt;和&lt;code&gt;列表页(list page)&lt;/code&gt;，根据&lt;code&gt;[]&lt;/code&gt;中标注的页面&lt;code&gt;属性(kind)&lt;/code&gt;，&lt;code&gt;single&lt;/code&gt;包括&lt;code&gt;page&lt;/code&gt;，&lt;code&gt;list&lt;/code&gt;包括&lt;code&gt;home&lt;/code&gt;, &lt;code&gt;section&lt;/code&gt;, &lt;code&gt;taxonomyTerm&lt;/code&gt;和&lt;code&gt;taxonomy&lt;/code&gt;。其中，单页为用户撰写的文章，列表为Hugo自动创建的文件。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;LoveIt模板：&lt;br&gt;
_default/&lt;br&gt;
home page - baseof.html + summary.html&lt;br&gt;
posts - baseof.html + section.html&lt;br&gt;
post - baseof.html + patrial/&lt;br&gt;
about - baseof.html + single.html&lt;/p&gt;
&lt;p&gt;posts/&lt;br&gt;
single.html&lt;/p&gt;
&lt;p&gt;在编写模板的时候，一般会先编写一个基础模板。然后将一些常用的公用模板，如导航栏、页首、页脚等，做成单独的子模板，在需要的时候将这些子模板导入基础模板。&lt;br&gt;
Hugo默认的基础模板页是&lt;code&gt;_default/baseof.html&lt;/code&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hugo简明教程1</title>
      <link>https://guorou.github.io/2020/02/0001-hugo-concise-tutorial/</link>
      <pubDate>Mon, 03 Feb 2020 17:23:08 +0800</pubDate>
      
      <guid>https://guorou.github.io/2020/02/0001-hugo-concise-tutorial/</guid>
      <description>&lt;p&gt;Hugo是由GO语言实现的静态网站生成器，自称“The world&amp;rsquo;s fastest framework for building websites”。&lt;/p&gt;
&lt;p&gt;静态网站的好处是快速、安全和易于部署，最主要的是可以利用版本控制系统来进行管理。&lt;br&gt;
本文介绍了如何使用Hugo快速搭建个人网站以及如何利用免费的github pages进行发布。&lt;/p&gt;
&lt;h2 id=&#34;step-1-install-hugo-for-win&#34;&gt;Step 1: Install Hugo for Win&lt;/h2&gt;
&lt;p&gt;在release&lt;a href=&#34;https://github.com/gohugoio/hugo/releases&#34; target=&#34;_blank&#34;&gt;&lt;u&gt;下载&lt;/u&gt;&lt;/a&gt; 对应版本的二进制文件，二进制版本的好处是无需安装额外依赖。下载完成后解压获得hugo.exe文件，然后将其所在路径添加到环境变量PATH中，方便在命令行中使用。&lt;/p&gt;
&lt;p&gt;添加成功后，在cmd中输入&lt;code&gt;hugo version&lt;/code&gt;检查是否安装成功，如果安装成功会输出&lt;br&gt;
&lt;code&gt;Hugo Static Site Generator v0.63.2-934EE21F windows/amd64 BuildDate: 2020-01-27T12:14:15Z&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;我们也可以通过执行&lt;code&gt;hugo -help&lt;/code&gt;查看命令帮助。&lt;/p&gt;
&lt;h2 id=&#34;step-2-create-a-new-site&#34;&gt;Step 2: Create a New Site&lt;/h2&gt;
&lt;p&gt;创建一个新的hugo站点：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;hugo new site path/to/site
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;该命令会在site目录下创建一个新的hugo站点，文件目录结构如下：&lt;br&gt;
site/ &lt;br&gt;
├─ archetypes&lt;br&gt;
│  └─ default.md&lt;br&gt;
├─ config.toml &lt;br&gt;
├─ content&lt;br&gt;
├─ data&lt;br&gt;
├─ layouts&lt;br&gt;
├─ static&lt;br&gt;
└─ themes&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;config.toml&lt;br&gt;
站点的全局参数配置文件&lt;/li&gt;
&lt;li&gt;archetypes&lt;br&gt;
存放default.md文件，该文件定义了Hugo的markdown文件&lt;code&gt;前置数据(Front Matter)&lt;/code&gt;的结构，可以理解为markdown的metadata。我们可以自定义该结构文件，然后在config.toml中指定自定义的结构文件。Front Matter支持三种格式，分别为yaml，toml和json。默认生成的default.md文件为yaml格式，至少包括以下3项：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-YAML&#34; data-lang=&#34;YAML&#34;&gt;&lt;span class=&#34;w&#34;&gt;	&lt;/span&gt;--- &lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;	&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;{{ replace .Name &amp;#34;&lt;/span&gt;-&lt;span class=&#34;s2&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34; | title }}&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;	&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;{{&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;.Date&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;}}&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;	&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;draft&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;	&lt;/span&gt;--- &lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  &lt;code&gt;draft&lt;/code&gt;为&lt;code&gt;true&lt;/code&gt;表示该文章处于草稿状态，不会被渲染和显示，发布时需要改为&lt;code&gt;false&lt;/code&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;content&lt;br&gt;
存放网页内容的目录，我们编写的markdown文件都存放在该目录中，是Hugo的默认源目录。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;data&lt;br&gt;
data目录用来存放数据文件，一般是json文件，Hugo提供了相关命令可以从data目录下读取相关的文件数据，然后渲染到HTML页面中，将业务数据与模板分离。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;layouts&lt;br&gt;
存放自定义的模板文件，Hugo优先使用layouts目录下的模板，未发现再去themes目录下查找。模板是以&lt;code&gt;.html&lt;/code&gt;文件指明如何将内容视图渲染为静态页面。&lt;br&gt;
模板包括列表页面、主页、分类模板、partals、单页模板等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;static&lt;br&gt;
存放所有的静态内容，如images, css、js、CNAME等。Hugo在渲染时，会将static目录下的文件直接复制到public目录下，不会做任何渲染。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;themes&lt;br&gt;
存放网站主题，可以下载多个主题，themes目录下的每个子目录代表了一个主题。可以通过在config.toml中通过参数theme指定主题，即theme目录下的子目录名字，也可以在执行hugo命令渲染时通过增加flag参数–theme=xx指定。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;step-3-add-a-theme&#34;&gt;Step 3: Add a Theme&lt;/h2&gt;
&lt;p&gt;Hugo允许我们创建自己的主题或者使用预创建的开源主题。使用预创建的主题可以为我们节约大量的时间，避免关注不必要的技术细节而专注于内容的输出。让我们使用预创建的主题快速开始吧！&lt;/p&gt;
&lt;p&gt;首先我们挑选一个喜欢的 &lt;a href=&#34;https://themes.gohugo.io/&#34; target=&#34;_blank&#34;&gt;&lt;u&gt;hugo主题&lt;/u&gt;&lt;/a&gt; ，例如 &lt;a href=&#34;https://themes.gohugo.io/loveit/&#34; target=&#34;_blank&#34;&gt;&lt;u&gt;LoveIt&lt;/u&gt;&lt;/a&gt;，然后将主题下载到themes目录下。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; path/to/site
git init
git clone https://github.com/xx/xx.git themes/LoveIt
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;执行成功后，会在themesm目录下生成主题目录LoveIt。&lt;br&gt;
添加主题到配置文件中：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;theme = &amp;#34;LoveIt&amp;#34;&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; config.toml
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;或直接用文本编辑器打开config.toml修改相应的配置。&lt;/p&gt;
&lt;p&gt;一个快速简便的配置方法是用&lt;code&gt;themes/loveit/exampleSite&lt;/code&gt;下的&lt;code&gt;config.toml&lt;/code&gt;替换&lt;code&gt;/site&lt;/code&gt;站点目录下默认生成的&lt;code&gt;config.tmol&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&#34;step-4-add-some-content&#34;&gt;Step 4: Add Some Content&lt;/h2&gt;
&lt;p&gt;我们可以手动创建内容文件（content files），然后添加metadata，如title和data等。也可以通过下面的命令自动创建草稿：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;hugo new posts/my-first-post.md
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;在&lt;code&gt;content/posts&lt;/code&gt;目录中会生成一篇名为&lt;code&gt;my-first-post.md&lt;/code&gt;的文章草稿，并自动添加&lt;code&gt;archetypes/default.md&lt;/code&gt;中的内容。&lt;/p&gt;
&lt;h2 id=&#34;step-5-hosting-hugo-site-locally&#34;&gt;Step 5: Hosting Hugo Site Locally&lt;/h2&gt;
&lt;p&gt;在站点目录下执行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;hugo server
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;启动服务器后，可以通过&lt;a href=&#34;http://localhost:1313/&#34; target=&#34;_blank&#34;&gt;http://localhost:1313/&lt;/a&gt;访问站点并调试。Hugo支持所谓的LiveReload，相应配置及内容的修改会即刻生效并在浏览器中加载。&lt;/p&gt;
&lt;h2 id=&#34;step-6-build-static-pages&#34;&gt;Step 6: Build Static Pages&lt;/h2&gt;
&lt;p&gt;在创建静态页面之前，我们需要对&lt;code&gt;config.toml&lt;/code&gt;进行配置。因为我们准备将该网页托管到github pages上，需要将baseURL修改为&amp;quot;https://yourgithubusername.github.io/&amp;quot;。&lt;br&gt;
调试无误后，我们在站点目录下执行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;hugo
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;该命令会在站点目录下新建一个public子目录，然后将渲染后的全部站点文件输出到该目录中。&lt;br&gt;
我们可以将public目录中的文件直接提交到github上以Githbu Pages方式发布，也可以部署到自己的服务器上。&lt;/p&gt;
&lt;h2 id=&#34;step-7-hosting-on-github-pages&#34;&gt;Step 7: Hosting on Github Pages&lt;/h2&gt;
&lt;p&gt;我们在github中新建一个repo，命名为&lt;code&gt;yourgithubusername.github.io&lt;/code&gt;，然后将public中的文件push到该仓库中。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; path/to/site/public
git init
git remote add origin https://github.com/yourgithubusername/yourgithubusername.github.io
git add.
git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;your message&amp;#34;&lt;/span&gt;
git push origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;叮！ 通过&lt;u&gt;&lt;a href=&#34;http://yourgitubusername.github.io&#34;&gt;http://yourgitubusername.github.io&lt;/a&gt;&lt;/u&gt; 访问你的网站吧。&lt;/p&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://s0gohugo0io.icopy.site/documentation/&#34; target=&#34;_blank&#34;&gt;Hugo Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
  </channel>
</rss>