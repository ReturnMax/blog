<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on 晨钟暮鼓</title>
    <link>https://guorou.github.io/categories/linux/</link>
    <description>Recent content in Linux on 晨钟暮鼓</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Sun, 16 Feb 2020 23:12:35 +0800</lastBuildDate>
    
	<atom:link href="https://guorou.github.io/categories/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Linux文件与用户管理</title>
      <link>https://guorou.github.io/2020/02/0005-linux-user-management/</link>
      <pubDate>Sun, 16 Feb 2020 23:12:35 +0800</pubDate>
      
      <guid>https://guorou.github.io/2020/02/0005-linux-user-management/</guid>
      <description>&lt;p&gt;Linux系统是一个多用户多任务的分时操作系统，每一个需要使用系统资源的用户都需要先由系统管理员创建一个账号，然后以该账号的身份和口令登入系统。在Linux中每个用户必须至少属于一个组。&lt;br&gt;
&lt;br /&gt;
用户的账号既有助于系统管理员控制用户对系统资源的访问权限，也有助于帮助用户组织文件，并为用户提供安全性、隐私性的保护。&lt;/p&gt;
&lt;h2 id=&#34;文件基本属性&#34;&gt;文件基本属性&lt;/h2&gt;
&lt;p&gt;在学习Linux用户管理之前，我们先来了解关于文件的一些基本概念。&lt;br&gt;
在Linux系统中有一个基本思想，即“一切皆文件”。控制文件的访问权限非常重要，Linux中针对每一个文件都有属主(User/Owner)、属组(Group)和其他组(Other)的概念，藉此可以管理不同用户访问同一文件的权限。&lt;br&gt;
&lt;br /&gt;
在Linux系统中，我们可以使用&lt;code&gt;ls -l&lt;/code&gt;命令来显示一个文件的属性及其所属的用户和组，如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;root@guoc:/# ls -l
total &lt;span class=&#34;m&#34;&gt;7&lt;/span&gt;
...
drwxrw-r-- &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; root root &lt;span class=&#34;m&#34;&gt;4096&lt;/span&gt; Otc &lt;span class=&#34;m&#34;&gt;18&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2020&lt;/span&gt; bin  
----------   ---- ----                  ---
 类型及权限   属主  属组                 文件
...
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;属性&#34;&gt;属性&lt;/h3&gt;
&lt;p&gt;首字段&lt;code&gt;drwxrw-r--&lt;/code&gt;描述了文件的类型及不同用户的权限(Permission)。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;文件类型&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;属主权限&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;属组权限&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;其他用户权限&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;d&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;r w x&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;r w -&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;r - -&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1 2 3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;4 5 6&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;7 8 9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;目录文件&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;读写执行&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;读写&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;读&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;其中，首字符表示文件类型：&lt;br&gt;
&lt;code&gt;d&lt;/code&gt;为目录，&lt;code&gt;-&lt;/code&gt;为文件，&lt;code&gt;l&lt;/code&gt;为链接文档，&lt;code&gt;b&lt;/code&gt;为可供存储的接口设备，&lt;code&gt;c&lt;/code&gt;为串行端口设备。&lt;/p&gt;
&lt;p&gt;接下来的字符中，&lt;code&gt;rwx&lt;/code&gt;三个一组，分别表示&lt;code&gt;read&lt;/code&gt;、&lt;code&gt;write&lt;/code&gt;和&lt;code&gt;execute&lt;/code&gt;权限，&lt;code&gt;-&lt;/code&gt;表示没有对应的权限。&lt;/p&gt;
&lt;p&gt;总体来看，第0位确定文件类型，第1-3位确定属主拥有该文件的权限，
第4-6位确定属组拥有该文件的权限，第7-9位确定其他用户拥有该文件的权限。&lt;/p&gt;
&lt;h3 id=&#34;属主userowner&#34;&gt;属主(User/Owner)&lt;/h3&gt;
&lt;p&gt;属主是文件的所有者。默认情况下，属主为该文件的创建者，谁创建了这个文件，谁就自然的成为了该文件的所有者。&lt;/p&gt;
&lt;h3 id=&#34;属组group&#34;&gt;属组(Group)&lt;/h3&gt;
&lt;p&gt;在Linux系统中，用户是按组分类的，一个用户属于一个或多个组，属于同一个组的用户对同一文件拥有相同的访问权限。&lt;br&gt;
当一个用户创建了一个文件后，默认该用户所在的组就是这个文件的属组。通过设定文件的属组，我们可以集中管理属组内所有用户对这个文件的访问权限。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;默认情况下，文件的属主和属组分别为该文件的创建者及其所在的用户组，但我们也可以更改文件的属主和属组。因此，一些教程中把文件的属组解释为文件属主所在的组，或者把属组用户解释为与属主同组的用户，这种理解并不正确。&lt;/li&gt;
&lt;li&gt;上面的例子中，虽然属主和属组都为root，但是属主字段为&lt;strong&gt;用户&lt;/strong&gt;&lt;code&gt;uid&lt;/code&gt;，属组字段为&lt;strong&gt;用户组&lt;/strong&gt;&lt;code&gt;gid&lt;/code&gt;，前者代表单个用户账号，后者代表账号的集合。我们在创建新用户时，会默认创建一个同名的用户组，但是两者之间并不等价。&lt;/li&gt;
&lt;li&gt;对每一个文件来说，除属主以外的用户再划分为属组用户和其他用户，三者之间的权限彼此独立。比如：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;d---rw-r-- &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; usr usr &lt;span class=&#34;m&#34;&gt;4096&lt;/span&gt; Otc &lt;span class=&#34;m&#34;&gt;18&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2020&lt;/span&gt; bin
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;假设属主usr的gid为usr，此时属主没有读写执行bin文件的权限，但是与属主同组的其他用户拥有读写bin文件的权限。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;其他组other&#34;&gt;其他组(Other)&lt;/h3&gt;
&lt;p&gt;除去文件属主和属组用户以外的用户为其他组用户。&lt;/p&gt;
&lt;h2 id=&#34;文件属性管理&#34;&gt;文件属性管理&lt;/h2&gt;
&lt;h3 id=&#34;更改文件属主&#34;&gt;更改文件属主&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Root用户&lt;/strong&gt;可以使用&lt;code&gt;chown&lt;/code&gt;命令更改文件的属主，也可以同时更改文件的属组。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;chown &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;-R&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; User&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;:Group&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;File&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;Directory...&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;code&gt;[  ]&lt;/code&gt;内为可选参数。&lt;br&gt;
-R 为递归更改，当更改目录文件时，加上该参数可以递归更改目录及目录下所有文件的属主。&lt;/p&gt;
&lt;h3 id=&#34;更改文件属组&#34;&gt;更改文件属组&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Root用户&lt;/strong&gt;和&lt;strong&gt;文件属主&lt;/strong&gt;可以使用&lt;code&gt;chgrp&lt;/code&gt;命令更改文件属组，前者更改没有限制，后者只可将属组改为自己是其成员的组。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;chgrp &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;-R&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; User &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;File&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;Directory...&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;-R 为可选参数。当更改目录文件时，加上该参数可以递归更改目录及目录下所有文件的属组。&lt;/p&gt;
&lt;h3 id=&#34;更改文件权限&#34;&gt;更改文件权限&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Root用户&lt;/strong&gt;和&lt;strong&gt;文件属主&lt;/strong&gt;可以使用&lt;code&gt;chmod&lt;/code&gt;命令更改文件权限。&lt;br&gt;
更改文件权限有两种方式，分别为数字模式(Numeric Mode)和符号模式(Symbolic Mode)。&lt;/p&gt;
&lt;h4 id=&#34;数字模式&#34;&gt;数字模式&lt;/h4&gt;
&lt;p&gt;数字模式中&lt;code&gt;r``w``x&lt;/code&gt;权限分别用分数表示：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;r&lt;/code&gt;：4&lt;/li&gt;
&lt;li&gt;&lt;code&gt;w&lt;/code&gt;：2&lt;/li&gt;
&lt;li&gt;&lt;code&gt;x&lt;/code&gt;：1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;三种权限的分数累加之和代表User、Group和Other用户的权限。举个例子，&lt;code&gt;[-rwxrw----]&lt;/code&gt;分数计算如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;User = rwx = 4 + 2 + 1 = 7&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Group = rw- = 4 + 2 + 0 = 6&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Other = --- = 0 + 0 + 0 = 0&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因此，该文件的权限数字可以用&lt;code&gt;760&lt;/code&gt;表示。&lt;br&gt;
更改权限的时我们输入如下命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;chmod &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;-R&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; xyz &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;File&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;Directory...&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;其中xyz就是按照上述方法计算出的用户权限。&lt;/p&gt;
&lt;h4 id=&#34;符号模式&#34;&gt;符号模式&lt;/h4&gt;
&lt;p&gt;符号模式中使用&lt;code&gt;u&lt;/code&gt;，&lt;code&gt;g&lt;/code&gt;，&lt;code&gt;o&lt;/code&gt;分别表示&lt;code&gt;User&lt;/code&gt;，&lt;code&gt;Group&lt;/code&gt;，&lt;code&gt;Other&lt;/code&gt;，用&lt;code&gt;a&lt;/code&gt;来表示&lt;code&gt;All&lt;/code&gt;，即全部的身份。此外，使用&lt;code&gt;+&lt;/code&gt;，&lt;code&gt;-&lt;/code&gt;，&lt;code&gt;=&lt;/code&gt;分别表示添加、除去和设定权限。&lt;/p&gt;
&lt;p&gt;举个例子，我们设定&lt;code&gt;test&lt;/code&gt;文件的权限为&lt;code&gt;-rwxr-xr--&lt;/code&gt;，可以使用以下命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;chmod &lt;span class=&#34;nv&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;rwx,g&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;rx,o&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;r &lt;span class=&#34;nb&#34;&gt;test&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;现在我们使用以下命令，除去&lt;code&gt;test&lt;/code&gt;文件所有用户的执行权限：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;chmod a-x &lt;span class=&#34;nb&#34;&gt;test&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;用户管理&#34;&gt;用户管理&lt;/h2&gt;
&lt;p&gt;用户账号的管理主要涉及到用户账号的添加、修改和删除。&lt;/p&gt;
&lt;h3 id=&#34;添加新用户账号&#34;&gt;添加新用户账号&lt;/h3&gt;
&lt;p&gt;添加用户账号就是在系统中创建一个新账号，然后为新账号分配用户号、用户组、主目录和登录Shell等资源。刚添加的账号是被锁定的，无法使用。&lt;br&gt;
通过使用&lt;code&gt;useradd&lt;/code&gt;命令添加新的用户账号，语法如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;useradd &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;option&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; username
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;选项说明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-c comment 指定一段注释性描述&lt;/li&gt;
&lt;li&gt;-d 指定用户主目录，如果此目录不存在，添加-m选项可以创建主目录&lt;/li&gt;
&lt;li&gt;-g 指定用户所属的用户组 &lt;/li&gt;
&lt;li&gt;-G 指定用户所属的附加组，有多个附加组则用逗号隔开&lt;/li&gt;
&lt;li&gt;-s 指定用户的登录Shell&lt;/li&gt;
&lt;li&gt;-u 指定用户的用户号&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;举个例子：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;useradd -d /home/gavin -m -s /bin/bash -g group -G root,adm gavin
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;该命令添加了一个名为&lt;code&gt;gavin&lt;/code&gt;的新用户，&lt;code&gt;-d&lt;/code&gt;和&lt;code&gt;-m&lt;/code&gt;选项为该用户创建了主目录&lt;code&gt;/home/gavin&lt;/code&gt;，登录shell为&lt;code&gt;bash&lt;/code&gt;，他属于&lt;code&gt;group&lt;/code&gt;用户组，同时也属于&lt;code&gt;root&lt;/code&gt;和&lt;code&gt;adm&lt;/code&gt;用户组，其中&lt;code&gt;group&lt;/code&gt;是他的主用户组。&lt;br&gt;
&lt;br /&gt;
添加新用户账号就是系统在/etc/passwd文件中增加一条新纪录，同时更新其他系统文件，如/etc/group和/etc/shadow等，详细介绍见第五节&lt;a href=&#34;#%e7%94%a8%e6%88%b7%e5%92%8c%e7%94%a8%e6%88%b7%e7%bb%84%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6&#34;&gt;用户和用户组配置文件&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;指定或修改用户密码&#34;&gt;指定或修改用户密码&lt;/h3&gt;
&lt;p&gt;刚创建的用户没有密码，被系统锁定无法使用，需要为其指定密码后才可以使用，即使是指定空的密码。&lt;br&gt;
使用&lt;code&gt;passwd&lt;/code&gt;命令指定或修改用户密码，语法如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;passwd &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;option&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; username
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;选项说明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-l 锁定密码，禁用账号&lt;/li&gt;
&lt;li&gt;-u 密码解锁&lt;/li&gt;
&lt;li&gt;-d 使账号没有密码&lt;/li&gt;
&lt;li&gt;-f 强迫用户下次登录时修改密码&lt;/li&gt;
&lt;li&gt;如果username为空，则默认修改当前用户的密码&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;修改用户&#34;&gt;修改用户&lt;/h3&gt;
&lt;p&gt;修改用户账号就是根据实际业务需求更改用户的相关书信，如用户组、登录Shell等。&lt;br&gt;
使用&lt;code&gt;usermod&lt;/code&gt;命令修改用户属性，语法如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;usermod &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;option&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; username
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;选项说明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-l newname 修改用户名&lt;/li&gt;
&lt;li&gt;其它可参考&lt;code&gt;useradd&lt;/code&gt;命令。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;删除用户&#34;&gt;删除用户&lt;/h3&gt;
&lt;p&gt;我们可以使用&lt;code&gt;userdel&lt;/code&gt;命令执行删除用户的操作，语法如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;userdel &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;option&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; username
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;常用的选项是&lt;code&gt;-r&lt;/code&gt;，它的作用是将该用户的主目录一起删除，不添加的话会保留该用户的主目录。&lt;br&gt;
举个例子：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;userdel -r gavin
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;该命令会删除用户&lt;code&gt;gavin&lt;/code&gt;在系统文件，如/etc/passwd，/etc/shadow，/etc/group中的相应记录，同时删除用户的主目录。&lt;/p&gt;
&lt;h3 id=&#34;查询用户&#34;&gt;查询用户&lt;/h3&gt;
&lt;p&gt;whoami
id
groups&lt;/p&gt;
&lt;h3 id=&#34;切换用户&#34;&gt;切换用户&lt;/h3&gt;
&lt;p&gt;su&lt;/p&gt;
&lt;h3 id=&#34;切换用户组&#34;&gt;切换用户组&lt;/h3&gt;
&lt;p&gt;newgrp&lt;/p&gt;
&lt;h2 id=&#34;用户组管理&#34;&gt;用户组管理&lt;/h2&gt;
&lt;h2 id=&#34;用户和用户组配置文件&#34;&gt;用户和用户组配置文件&lt;/h2&gt;
&lt;h2 id=&#34;常用命令总结&#34;&gt;常用命令总结&lt;/h2&gt;</description>
    </item>
    
    <item>
      <title>SSH简介</title>
      <link>https://guorou.github.io/2020/02/0004-ssh-introduction/</link>
      <pubDate>Wed, 12 Feb 2020 21:24:11 +0800</pubDate>
      
      <guid>https://guorou.github.io/2020/02/0004-ssh-introduction/</guid>
      <description>&lt;p&gt;虽然一直在使用SSH连接服务器，但是对于SSH连接的原理却没有深究，只是大体了解是使用了非对称加密技术对传输信息进行了加密。搜资料的时候顺手翻到了一篇博文，介绍的还比较详细，特转载保存。本文转自&lt;a href=&#34;https://fancyseeker.github.io/2013/12/30/ssh_overview/&#34; target=&#34;_blank&#34;&gt;链接&lt;/a&gt;，作者是FancySeeker。&lt;br&gt;
本文主要介绍了SSH的连接认证原理以及SSH的配置和使用。&lt;/p&gt;
&lt;h2 id=&#34;ssh简要介绍&#34;&gt;SSH简要介绍&lt;/h2&gt;
&lt;p&gt;SSH的英文全称为Secure Shell，是IETF（Internet Engineering Task Force）的Network Working Group所制定的一族协议，其目的是要在非安全网络上提供安全的远程登录和其他安全网络服务。用于在主机之间建立起安全连接, 并加密传输内容, 以达到安全的远程访问, 操作以及数据传输的目的。&lt;/p&gt;
&lt;p&gt;SSH主要有两个特点: 1. 安全性 2. 传输速度快&lt;/p&gt;
&lt;p&gt;为什么要强调SSH的安全特性, 因为传统的网络服务程序，如 FTP、POP 和 Telnet 其本质上都是不安全的；因为它们在网络上用明文传送数据、用户帐号和用户口令，很容易受到中间人（man-in-the-middle）攻击方式的攻击。就是存在另一个人或者一台机器冒充真正的服务器接收用户传给服务器的数据，然后再冒充用户把数据传给真正的服务器。 而 SSH 是目前较可靠，专为远程登录会话和其他网络服务提供安全性的协议。利用 SSH 协议可以有效防止远程管理过程中的信息泄露问题。透过 SSH 可以对所有传输的数据进行加密，也能够防止 DNS 欺骗和 IP 欺骗。&lt;/p&gt;
&lt;p&gt;SSH的传输速度快是因为SSH传输的数据都是经过压缩的, 自然传输速度快。&lt;/p&gt;
&lt;h2 id=&#34;ssh认证原理&#34;&gt;SSH认证原理&lt;/h2&gt;
&lt;p&gt;在介绍SSH具体的认证原理之前, 先简单的介绍下关于公钥和密钥加密的概念。所谓的公钥加密（public-key cryptography），或非对称密钥加密（asymmetric key cryptography） 是一类广泛使用的加密算法。这类算法使用一对（pair）密钥即公钥（public key）和私钥（private key）。 其中公钥可以随便分发，只用于加密（encryption），私钥则只由一人持有，只用于解密。通过公钥加密过的密文使用密钥可以轻松解密, 但根据公钥来猜测私钥却十分困难。&lt;/p&gt;
&lt;p&gt;因此, 我们可以很容易的发现这么一个事实, 一个消息在用公钥加密后, 哪怕在传输中被人截获, 如果没有私钥, 是无法解密获得其内容的, 只有拥有私钥的人才能成功解密消息。所以私钥应该由消息的接收方紧紧攥在手里, 不应让他人得知。&lt;/p&gt;
&lt;p&gt;公钥加密的关键点在于，一方面，公钥加密是可逆的，但是不能用公钥推断出私钥。显然数学上，已知一个公钥是能够算出对应私钥的，但是只要设计足够好的加密算法（以及使用足够复杂的密钥对），使得不能在可以接受的时间内破译即可。&lt;/p&gt;
&lt;p&gt;RSA是一种常见的公钥加密算法。RSA的工作原理依赖于如下事实：破译RSA私钥需要对某些极大的整数进行因数分解，而目前尚未找到快速的对极大整数作因数分解的算法。换言之，如果有人找到了这样的算法，那么全世界的 RSA 加密都会失效。&lt;/p&gt;
&lt;p&gt;RSA是由Ron Rivest，Adi Shamir, Leonard Adleman三人在1978年首次提出的。三人并因此项工作荣获了2002年Turing Award。Rivest还是算法导论的作者之一，书中在31章对RSA系统的原理进行了简要说明，系统实现中利用到了数论中的Euler-Fermat theorem。&lt;/p&gt;
&lt;p&gt;一个基于RSA的公钥大概如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAvSkEZ0fKXRqQ/DkjCfsAETsQgV8OR/RVQmwBk/J5IWoknf8Dr
y5kOs+1bnx9zaf8oIcVuXf0jRxTccLBOXiReFJE4aD2rWO33sqA0M4qP1ESYhsU4yokRA0IMDJ62JUv2cWVJg
GpeQriol2t7mH8E6aB8OiJ+NgRbh6+/0LbtQs40VA2+W5PtaBwT4sjv9LOHIdzQcsEeCM8MIHqmXHst7/JuVI
i7wLCxB7Ur8qtwZ2/Ii8Ckjfo6mikWmSh6mRMq9qn0FkMkPCcpm8o4f1zJWOuf+RnjPpopFTqIa8JssMHJMuQ
cCm3EHDkBHjLk/SkidWOzqOtSvUeGKieWiijuw== username@localhost.localdomain
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;与之配对的私钥形如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEAvSkEZ0fKXRqQ/DkjCfsAETsQgV8OR/RVQmwBk/J5IWoknf8D
ry5kOs+1bnx9zaf8oIcVuXf0jRxTccLBOXiReFJE4aD2rWO33sqA0M4qP1ESYhsU
4yokRA0IMDJ62JUv2cWVJgGpeQriol2t7mH8E6aB8OiJ+NgRbh6+/0LbtQs40VA2
+W5PtaBwT4sjv9LOHIdzQcsEeCM8MIHqmXHst7/JuVIi7wLCxB7Ur8qtwZ2/Ii8C
kjfo6mikWmSh6mRMq9qn0FkMkPCcpm8o4f1zJWOuf+RnjPpopFTqIa8JssMHJMuQ
cCm3EHDkBHjLk/SkidWOzqOtSvUeGKieWiijuwIBIwKCAQEAjITesx9jIJdkY5go
qFQOrbbZD6Wy1l27ra9RoRqF3k7ZX2z7bDEXQaGcuHm8iiUEzwVDVpOfuUg9/LyP
icdHffP4p5wk9dUMPxoWjHvk3pP/BwzNsBCtOd3LkYSVxXYji9SaroTkS0nqL3jK
WVAaV72FGVxJPINAJer0SJgQ7OJ7f0kZJYoPwG0VpMTLOsmulH7/M5e9i+kwDLmH
+TMvJ3y8gXjc/Sj5UqN/JQIY+h07UxYGvoju/isqFHh8OmahsjJ3Nb3QsUEkC/Kj
cKG2K+mUzTe/4/XQuqMadrjX82QF2b2gL+cdvUAwLn55boXmrtUzxEPo4xxiDNzY
AbYxSwKBgQDxIkaa+EPSJXYej/5YzJLJLVsnb9ygqe/0fM0x022J6Z+0Yq9AIwJ7
N7dvMgNSROLoJ17Oij/N7aoiAZy1KHg1vOoqx6T6BClay8I1+dOsbY6Fi0QbkZeI
Rr6CDueq5PBR8j/oghNhQeFfJUEICBFU6Z7+uFwxuAtQqqdFHyDhSwKBgQDI0nX6
Jz9oW+Y+dXAvhpL8Yln0R45ufiqatkTQgGbeZ70XlKeR7VzQiXecy/XDteJCMlnv
4BhjHL967nSAmrCza13I3eXIYxbzypeNC57bVVXM9BBTg5f4nWwTN+I8Gd/BA5Y8
mekQPBuSyAOp7ULAecjKZrD9Jhw1vybT/aYxUQKBgQDcdxv7ZqRoXMPEK+E7PrIX
BOWgZkYPPEkaC7RKz+8fAXwSo15mhmirK6BlqhGqTZxB+BwqjQcirWhZmxLuxeo/
wqo1vdiqEm7z7X5dPC8+kA1G5bqc3OJQtbV+OYNaaupZjQc6+pVgPDvEtFi24s4E
fdMyB6S/vjY7H67gHHXVSwKBgQC3m9mUQSQHpHq8wyS9vN4olG+AQWxHw88uXYC+
oUgbzI+gh+mp/ZawCKff0GurnvrALgkV1DON0SQYn4B1lL7P7SKLw5BCLrXmNZHg
Cp/eeegL19RpnOK3a1t/SQlbhV7cWw0ENPJX/HD7OocBwvszoouxvPmW/kWte5E2
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;SSH 连接是&lt;code&gt;C/S&lt;/code&gt;模型，客户端发出连接申请，服务器对客户端进行验证，再考虑是否接受连接申请。&lt;/p&gt;
&lt;h2 id=&#34;ssh认证过程&#34;&gt;SSH认证过程&lt;/h2&gt;
&lt;p&gt;SSH提供了两种认证的方式, 分别为:&lt;/p&gt;
&lt;h3 id=&#34;password认证&#34;&gt;Password认证&lt;/h3&gt;
&lt;p&gt;即账号口令验证，SSH的实现方式是，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;客户端向 ssh 服务器发出请求，服务器将自己的公钥返回给客户端；&lt;/li&gt;
&lt;li&gt;客户端用服务器的公钥加密自己的登录密码，再将信息发送给服务器；&lt;/li&gt;
&lt;li&gt;服务器接收到客户端传送的密码，用自己的私钥解码，如果结果正确，则同意登录，建立起连接。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这种方式还是存在漏洞，中间人可以假扮成服务器，骗取客户端的密码。而且在每次登陆的时候都需要输入密码，所以一般不采用该验证方式。&lt;/p&gt;
&lt;h3 id=&#34;public-key认证&#34;&gt;Public Key认证&lt;/h3&gt;
&lt;p&gt;Public Key认证利用公钥私钥对进行认证，在请求连接时不需要输入密码，并且由于整个请求连接和通信过程全程加密，因此安全性高。&lt;br&gt;
SSH协议第二版中有RSA和DSA两种算法认证，其中RSA加密验证比较常用。&lt;br&gt;
RSA加密验证方式，充分利用了非对称加密体系的优势，不需要在网络传输密码，完全杜绝了中间人攻击的可能。&lt;br&gt;
认证的具体步骤如下:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;准备工作&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;客户端先使用 ssh-keygen 命令，生成公钥和私钥。按照默认配置，私钥会被保存在&lt;code&gt;~/.ssh/id_rsa&lt;/code&gt;中，公钥则在&lt;code&gt;~/.ssh/id_rsa.pub&lt;/code&gt;中。&lt;/li&gt;
&lt;li&gt;客户端通过安全的方式（一般通过scp/Secure Copy Protocol）方式或者U盘拷贝的方式)将公钥发送给服务器。在服务器端, 将客户端发的公钥写入到&lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt;文件末尾。（其实公钥和私钥不是必须在客户端生成, 在服务器端生成也是可以的, 在哪生成的对公钥和私钥并没有任何影响, 重要的是二者是配对的, 而准备阶段其实是要保证这么一个事实, 即服务器端握有公钥, 并在对应账户的家目录下的&lt;code&gt;.ssh/authorized_keys&lt;/code&gt;文件中保存以便验证程序访问。请求端握有私钥。 至于为什么要将公钥和私钥这么分配, 接下来将会解释）&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;建立连接&lt;/strong&gt;&lt;br&gt;
在建立连接的时候，涉及到2对密钥，其中一对为准备阶段产生并分配好的密钥对，另一对为服务器在接收到一个连接请求时生成的密钥对。为了讲述方便，我们将这两组密钥对表示如下&lt;br&gt;
|Symbol|Description|&lt;br&gt;
|:-:|:-:|&lt;br&gt;
|PubC|客户端密钥对应的公钥|&lt;br&gt;
|PrvC|客户端握有的私钥|&lt;br&gt;
|PubS|服务器端产生的公钥|&lt;br&gt;
|PrvS|服务器端产生的私钥|&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;认证&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;服务器生成随机数（称之为challenge）&lt;code&gt;x&lt;/code&gt;，并用&lt;code&gt;PubC&lt;/code&gt;加密后生成结果&lt;code&gt;s(x)&lt;/code&gt;，发送给客户端；&lt;/li&gt;
&lt;li&gt;客户端使用&lt;code&gt;PrvC&lt;/code&gt;解密&lt;code&gt;s(x)&lt;/code&gt;得到&lt;code&gt;x&lt;/code&gt;，再将&lt;code&gt;x&lt;/code&gt;用&lt;code&gt;PubS&lt;/code&gt;加密发送回服务器端；&lt;/li&gt;
&lt;li&gt;服务器端使用&lt;code&gt;PrvS&lt;/code&gt;解密得到&lt;code&gt;x&lt;/code&gt;，进行核对, 如果正确则链接正式成立。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;通信加密&lt;/strong&gt;&lt;br&gt;
在请求连接前，服务器端和客户端拥有的密钥为&lt;br&gt;
|Server|Client|&lt;br&gt;
|:-:|:-:|&lt;br&gt;
|PubC|PrvC|&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;客户端发出申请。服务器会产生一组&lt;code&gt;session&lt;/code&gt;密钥对，即&lt;code&gt;PubS&lt;/code&gt;和&lt;code&gt;PrvS&lt;/code&gt;。&lt;br&gt;
此时服务器端和客户端拥有的密钥如下&lt;br&gt;
|Server|Client|&lt;br&gt;
|:-:|:-:|&lt;br&gt;
|PubC|PrvC|&lt;br&gt;
|PubS||&lt;br&gt;
|PrvS||&lt;/li&gt;
&lt;li&gt;服务器端利用客户端的公钥&lt;code&gt;PubC&lt;/code&gt;对&lt;code&gt;session&lt;/code&gt;公钥&lt;code&gt;PubS&lt;/code&gt;进行加密后发送给客户端；&lt;/li&gt;
&lt;li&gt;客户端用自己的密钥&lt;code&gt;PrvC&lt;/code&gt;解密信息，得到&lt;code&gt;session&lt;/code&gt;公钥&lt;code&gt;PubS&lt;/code&gt;，此时服务器端和客户端拥有的密钥如下&lt;br&gt;
|Server|Client|&lt;br&gt;
|:-:|:-:|&lt;br&gt;
|PubC|PubS|&lt;br&gt;
|PubS|PrvC|&lt;br&gt;
|PrvS||&lt;/li&gt;
&lt;li&gt;之后的数据交互，都通过对方方公钥加密，对方收到信息后，用其私钥解密，实现安全加密过程。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
  </channel>
</rss>